/*
 * include/linux/power/ricoh61x_battery_init.h
 *
 * Battery initial parameter for RICOH R5T618/619 power management chip.
 *
 * Copyright (C) 2012-2013 RICOH COMPANY,LTD
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
#ifndef __LINUX_POWER_RICOH61X_BATTERY_INIT_H
#define __LINUX_POWER_RICOH61X_BATTERY_INIT_H

/* 如果你能修改到这里的数据，那么说明你需要了解如下内容!
 *
 * 这里的数据不仅定义了电池ocv表，而且还指明了电池的电量，
 * 就在第2排（0,1,2）最后的两个字节，比如0x01, 0x2c表示电量300毫安时
 *
 * 我们可以通过手动更改电量的值去调整电量计的效果!
 *
 * 现阶段的情况是电量计的精度实际上是5%左右,
 * 在使用中可能出现电量计实际测到的值比实际消耗的电量偏少的情况
 * 这样会导致使用过程中在电量过低时电压偏低，导致异常掉电的情况，或者是长休眠时电量百分比掉的比较多的情况
 *
 * 针对这种情况，可以手动调小电池电量， 总体参考如下等式，并且根据实际测试情况调整
 *
 *   电量计测到的电量/电量计参数的总电量 = 实际消耗的电量/原电量计参数的总电量
 */

/*
 * 手动减少电量的后果
 *
 * 1, 确实是会减少重度用户一直使用的时间
 * 2, 但并不会减少待机时间
 *      我们在休眠的时候有用电压法进行电量的纠正，如果实际测到的电压相对当前电量偏高，那么我们会让它在休眠的时候掉得慢一些
 */

/* 如何测试？
 *
 * 1, 首先是长期大负载放电（比如开心率测试应用或者捕鱼），一直测到电量为零，看是突然掉电还是软件自动关机
 * 2, 另外在长期大负载放电放电到比较低电量时，人工进行各种操作，看会不会异常掉电
 * 3, 分段大负载放电+休眠的操作
 *    放到90%，静止休眠一个小时，看一下电量有没有变化2%以上
 *    放到70%，静止休眠一个小时，看一下电量有没有变化2%以上
 *    放到50%，静止休眠一个小时，看一下电量有没有变化2%以上
 *    放到30%，静止休眠一个小时，看一下电量有没有变化2%以上
 *    放到10%，静止休眠一个小时，看一下电量有没有变化2%以上
 *
 *    如果每次都有2%以上的变化，说明可以再做一点调整
 *    如果只是10%或者30%左右的时候有2%以上的变化，那么可以按照方法2测一下会不会突然掉电，如果不会，那么不用再做调整
 *
 * 此外如果老是出现异常关机的情况还需要配合调整板级代码中设置的板子最大放电电流，和板子允许的在最大电流的情况下的最小电压
 * 我们的板子目前都是如下设置
 *      .fg_target_vsys = 3300,
 *      .fg_target_ibat = 150,
 *
 * 瞬时的超大的电流不在软件的考虑范围内,
 * 比如1A左右的瞬时电流，这可能需要加电容，或者其它的什么
 */

#ifdef CONFIG_BATTERY_TYPE_LIST
#if defined CONFIG_BATTERY_WAKEUP_320MAH_4200MV_100MA
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0x0A, 0x0B, 0xEF, 0x0C, 0x0F, 0x0C, 0x0D,
		0x0C, 0x1E, 0x0C, 0x36, 0x0C, 0x5C, 0x0C, 0x93,
		0x0C, 0xC7, 0x0D, 0x0C, 0x0D, 0x64, 0x01, 0x32,
		0x01, 0x09, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x00, 0xC6, 0x00, 0x35, 0x00, 0x01, 0x00, 0x35, 0x00, 0x34,
		0x00, 0x32, 0x00, 0x35, 0x00, 0x3C, 0x00, 0x34, 0x00, 0x30
    }
};
/*
<Other Parameter>
nominal_capacity=320
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.6320
load_c=305
available_c=306
battery_v=3138
MakingMode=Normal
ChargeV=4.20V
LoadMode=Resistor
 */
#elif defined CONFIG_BATTERY_WAKEUP_320MAH_4200MV
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0x0F, 0x0B, 0xD3, 0x0B, 0xFA, 0x0C, 0x13,
		0x0C, 0x24, 0x0C, 0x3C, 0x0C, 0x62, 0x0C, 0x99,
		0x0C, 0xCE, 0x0D, 0x16, 0x0D, 0x72, 0x01, 0x2C,
		0x01, 0x36, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x00, 0xD6, 0x00, 0x40, 0x00, 0x3E, 0x00, 0x40, 0x00, 0x3E,
		0x00, 0x3C, 0x00, 0x3E, 0x00, 0x43, 0x00, 0x3E, 0x00, 0x3A
    }
};
/*
<Other Parameter>
nominal_capacity=320
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.7425
load_c=296
available_c=300
battery_v=3143
MakingMode=Normal
ChargeV=4.20V
LoadMode=Resistor
 */
#elif defined CONFIG_BATTERY_AW808_320MAH_4200MV
uint8_t battery_init_para[][32] = {
    {
		0x09, 0xEA, 0x0B, 0xAA, 0x0B, 0xEF, 0x0C, 0x0A,
		0x0C, 0x1B, 0x0C, 0x31, 0x0C, 0x56, 0x0C, 0x92,
		0x0C, 0xCE, 0x0D, 0x19, 0x0D, 0x72, 0x01, 0x36, /* 328 --> 310 */
		0x01, 0x26, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x00, 0x8D, 0x00, 0x52, 0x00, 0x46, 0x00, 0x43, 0x00, 0x41,
		0x00, 0x3E, 0x00, 0x3C, 0x00, 0x46, 0x00, 0x43, 0x00, 0x3A
    }
};

/*
<Other Parameter>
nominal_capacity=320
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.7115
load_c=297
available_c=328
battery_v=3099
MakingMode=Normal
ChargeV=4.20V
LoadMode=Resistor
 */


#elif defined CONFIG_BATTERY_OBAND_300MAH_4350MV
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0x1D, 0x0B, 0xD5, 0x0B, 0xF7, 0x0C, 0x15,
		0x0C, 0x33, 0x0C, 0x59, 0x0C, 0x8D, 0x0C, 0xD7,
		0x0D, 0x30, 0x0D, 0x86, 0x0D, 0xE7, 0x01, 0x18, /* 293 --> 280 */
		0x01, 0x7C, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x00, 0xE8, 0x00, 0x4B, 0x00, 0x46, 0x00, 0x4A, 0x00, 0x48,
		0x00, 0x46, 0x00, 0x46, 0x00, 0x56, 0x00, 0x51, 0x00, 0x4B
    }
};
/*
<Other Parameter>
nominal_capacity=300
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.918
load_c=297
available_c=293
battery_v=3161
MakingMode=Normal
ChargeV=4.35V
LoadMode=Resistor
 */
#elif defined CONFIG_BATTERY_OBAND_310MAH_4350MV
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0x7F, 0x0B, 0xCA, 0x0B, 0xFC, 0x0C, 0x14,
		0x0C, 0x29, 0x0C, 0x4B, 0x0C, 0x84, 0x0C, 0xCD,
		0x0D, 0x1B, 0x0D, 0x75, 0x0D, 0xE6, 0x01, 0x2C, /* 332 --> 300 */
		0x01, 0x63, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x01, 0x96, 0x00, 0x51, 0x00, 0x4A, 0x00, 0x44, 0x00, 0x41,
		0x00, 0x3F, 0x00, 0x4A, 0x00, 0x4F, 0x00, 0x46, 0x00, 0x43
    }
};

/*
<Other Parameter>
nominal_capacity=310
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.847
load_c=297
available_c=332
battery_v=3280
MakingMode=Normal
ChargeV=4.35V
LoadMode=Resistor
 */
#elif defined CONFIG_BATTERY_INWATCH_310MAH_4350MV
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0x2E, 0x0B, 0xD5, 0x0B, 0xF9, 0x0C, 0x15,
		0x0C, 0x33, 0x0C, 0x55, 0x0C, 0x88, 0x0C, 0xCE,
		0x0D, 0x25, 0x0D, 0x7C, 0x0D, 0xE8, 0x01, 0x29, /* 305 --> 297 */
		0x01, 0x27, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x01, 0x0B, 0x00, 0x43, 0x00, 0x3E, 0x00, 0x3F, 0x00, 0x3E,
		0x00, 0x37, 0x00, 0x38, 0x00, 0x43, 0x00, 0x3E, 0x00, 0x38
    }
};

/*
<Other Parameter>
nominal_capacity=310
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.711
load_c=297
available_c=327->305
battery_v=3182
MakingMode=Normal
ChargeV=4.35V
LoadMode=Resistor
 */
#elif defined CONFIG_BATTERY_INWATCH_310MAH_4350MV_V2
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0x3D, 0x0B, 0xD6, 0x0B, 0xF9, 0x0C, 0x15,
		0x0C, 0x33, 0x0C, 0x56, 0x0C, 0x88, 0x0C, 0xCB,
		0x0D, 0x23, 0x0D, 0x78, 0x0D, 0xE7, 0x01, 0x2c, /* 315 --> 300 */
		0x01, 0x4F, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x00, 0xF6, 0x00, 0x4D, 0x00, 0x44, 0x00, 0x47, 0x00, 0x44,
		0x00, 0x41, 0x00, 0x41, 0x00, 0x49, 0x00, 0x45, 0x00, 0x3F
    }
};
/*
<Other Parameter>
nominal_capacity=310
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.8050
load_c=345
available_c=328->315
battery_v=3200
MakingMode=Normal
ChargeV=4.35V
LoadMode=Resistor
 */
#elif defined CONFIG_BATTERY_GYENNO_300MAH_4200MV
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0x2B, 0x0B, 0xCE, 0x0B, 0xEF, 0x0C, 0x0D,
		0x0C, 0x28, 0x0C, 0x46, 0x0C, 0x6A, 0x0C, 0x9F,
		0x0C, 0xE0, 0x0D, 0x22, 0x0D, 0x72, 0x01, 0x22,
		0x01, 0x5E, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x00, 0xBC, 0x00, 0x5B, 0x00, 0x4A, 0x00, 0x48, 0x00, 0x4A,
		0x00, 0x45, 0x00, 0x41, 0x00, 0x46, 0x00, 0x4D, 0x00, 0x43
    }
};

/*
<Other Parameter>
nominal_capacity=300
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.836
load_c=296
available_c=290
battery_v=3177
MakingMode=Normal
ChargeV=4.20V
LoadMode=Resistor
 */

#elif defined CONFIG_BATTERY_IMCO_270MAH_4200MV
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0x74, 0x0B, 0xC7, 0x0B, 0xE7, 0x0C, 0x09,
		0x0C, 0x23, 0x0C, 0x40, 0x0C, 0x65, 0x0C, 0xA1,
		0x0C, 0xDE, 0x0D, 0x1F, 0x0D, 0x70, 0x01, 0x09,
		0x01, 0xC2, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
uint8_t impe_init_para[][20] = {
    {
		0x01, 0x2C, 0x00, 0x6C, 0x00, 0x5E, 0x00, 0x5B, 0x00, 0x5B,
		0x00, 0x58, 0x00, 0x56, 0x00, 0x60, 0x00, 0x5E, 0x00, 0x57
    }
};

/*
<Other Parameter>
nominal_capacity=270
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=1.081
load_c=392
available_c=269 -> 265
battery_v=3266
MakingMode=Normal
ChargeV=4.20V
LoadMode=Resistor
 */

#elif defined(CONFIG_BATTERY_IMCO_300MAH_4200MV)
uint8_t battery_init_para[][32] = {
	{
		0x00, 0x00, 0x0B, 0xCA, 0x0B, 0xF4, 0x0C, 0x0E,
		0x0C, 0x21, 0x0C, 0x38, 0x0C, 0x5B, 0x0C, 0x92,
		0x0C, 0xCC, 0x0D, 0x0D, 0x0D, 0x6F, 0x06, 0x06,
		0x00, 0x50, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
	}
};
uint8_t impe_init_para[][20] = {
	{
		0x00, 0x00, 0x00, 0x66, 0x00, 0x5C, 0x00, 0x58, 0x00, 0x51,
		0x00, 0x4B, 0x00, 0x4E, 0x00, 0x5F, 0x00, 0x51, 0x00, 0x47
	}
};

/*
<Other Parameter>
nominal_capacity=750
cut-off_v=3000
thermistor_b=3435
board_impe=0
bat_impe=0.1921
load_c=150
available_c=1542
battery_v=0000
MakingMode=Normal
ChargeV=4.20V
LoadMode=Resistor
 */

#endif
#else
#if 0
/*for 520mA*/
uint8_t battery_init_para[][32] = {
	{
		0x0A, 0x56, 0x0B, 0xBF, 0x0B, 0xDC, 0x0B, 0xFC,
		0x0C, 0x1B, 0x0C, 0x3C, 0x0C, 0x60, 0x0C, 0x8E,
		0x0C, 0xD0, 0x0D, 0x14, 0x0D, 0x6f, 0x01, 0xE5,
		0x00, 0xA8, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
	}
};
#endif

#ifdef CONFIG_320MAH_CAPACITY_BATTERY
uint8_t battery_init_para[][32] = {
    {
		0x0A, 0xDD, 0x0B, 0x3F, 0x0B, 0x8D, 0x0B, 0xDB,
		0x0C, 0x0A, 0x0C, 0x13, 0x0C, 0x38, 0x0C, 0x77,
		0x0C, 0xB4, 0x0D, 0x00, 0x0D, 0x5D, 0x01, 0x41,
		0x01, 0xD6, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
    }
};
#endif



#ifdef CONFIG_200MAH_CAPACITY_BATTERY
uint8_t battery_init_para[][32] = { 
	{   
		0x0B, 0x0E, 0x0B, 0xC3, 0x0B, 0xE6, 0x0C, 0x02, 
		0x0C, 0x19, 0x0C, 0x34, 0x0C, 0x5A, 0x0C, 0x92, 
		0x0C, 0xCF, 0x0D, 0x12, 0x0D, 0x63, 0x00, 0xB4, 
		0x01, 0xFE, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
	}   
};
#endif

#ifdef CONFIG_300MAH_CAPACITY_BATTERY
uint8_t battery_init_para[][32] = {
	{
		0x0B, 0x20, 0x0B, 0x59, 0x0B, 0x9B, 0x0B, 0xE2,
		0x0C, 0x07, 0x0C, 0x15, 0x0C, 0x3D, 0x0C, 0x7A,
		0x0C, 0xBA, 0x0D, 0x04, 0x0D, 0x66, 0x01, 0x4F,
		0x01, 0xB3, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
	}
};
#endif


#ifdef CONFIG_SMALL_CAPACITY_BATTERY
/*for <=260A*/
uint8_t battery_init_para[][32] = {
	{
		0x0A, 0x56, 0x0B, 0xBF, 0x0B, 0xDC, 0x0B, 0xFC,
		0x0C, 0x1B, 0x0C, 0x3C, 0x0C, 0x60, 0x0C, 0x8E,
		0x0C, 0xD0, 0x0D, 0x14, 0x0D, 0x6f, 0x00, 0xF0,
		0x01, 0x29, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
	}
};
#endif

#ifdef CONFIG_LARGE_CAPACITY_BATTERY
/*for 4000mA*/
uint8_t battery_init_para[][32] = {
	{
		0x0B, 0x0D, 0x0B, 0xC3, 0x0B, 0xF1, 0x0C, 0x0E,
		0x0C, 0x20, 0x0C, 0x38, 0x0C, 0x5C, 0x0C, 0x98,
		0x0C, 0xCD, 0x0D, 0x0A, 0x0D, 0x5A, 0x0E, 0x38,
		0x00, 0x4B, 0x0F, 0xC8, 0x05, 0x2C, 0x22, 0x56
	}
};
#endif
uint8_t impe_init_para[][20] = {
	{
		0x03, 0xEB, 0x01, 0x74, 0x01, 0x3E, 0x01, 0x3E, 0x01, 0x39,
		0x01, 0x2F, 0x01, 0x1E, 0x01, 0x1E, 0x01, 0x47, 0x01, 0x2E
	}
};
#endif

/*
   <Other Parameter>
   nominal_capacity=219
   cut-off_v=3000
   thermistor_b=3435
   board_impe=0
   bat_impe=07104
   load_c=100
   available_c=219
   battery_v=3159
   MakingMode=Normal
   ChargeV=4.20V
   LoadMode=Load
 */
#endif
